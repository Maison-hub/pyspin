name: Build Pyspin Binaries

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
  workflow_dispatch:   

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: pyspin-linux
          - os: macos-latest
            artifact_name: pyspin-macos
          - os: windows-latest
            artifact_name: pyspin.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Detect version (tag or default)
        id: get_version
        run: |
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            VERSION=$(git describe --tags --abbrev=0)
          else
            VERSION="0.0.0-dev"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Detected version: ${VERSION}"

      - name: Inject version into source
        run: |
          mkdir -p pyspin
          echo "__version__ = '${VERSION}'" > pyspin/version.py

      - name: Build binary
        run: |
          pyinstaller --onefile pyspin/__main__.py --name pyspin
          mkdir -p dist/out
          mv dist/pyspin dist/out/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Do not realease when no tags present
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/pyspin-linux/pyspin
            dist/pyspin-macos/pyspin
            dist/pyspin.exe/pyspin.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}